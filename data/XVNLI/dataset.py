# generate nli dataset from the caption generated by the model

import json
import pandas as pd

# list of languages
languages = ["es", "fr", "ar", "ru"]

# load the captions
captions = pd.read_csv("data/XVNLI/caption.csv", sep=",", header=0)
captions.columns = ["image_id", "caption"]
for i in captions.index:
    captions.loc[i, "image_id"] = captions.loc[i, "image_id"].split(".")[0]

# merge the captions with the data in each language
for language in languages:
    # path to the jsonl file including the test data and few-shot data
    # the few shot data includes 1, 5, 10, 20, 25, 48
    jsonl_file_paths = [
        "data/XVNLI/{}/test.jsonl".format(language),
        "data/XVNLI/{}/train_1.jsonl".format(language),
        "data/XVNLI/{}/train_5.jsonl".format(language),
        "data/XVNLI/{}/train_10.jsonl".format(language),
        "data/XVNLI/{}/train_20.jsonl".format(language),
        "data/XVNLI/{}/train_25.jsonl".format(language),
        "data/XVNLI/{}/train_48.jsonl".format(language),
    ]

    # merge the data in each jsonl file
    for jsonl_file_path in jsonl_file_paths:
        print("Processing {}".format(jsonl_file_path))

        labels = []
        hypotheses = []
        image_ids = []

        count = 0

        # open the JSONL file and read each line
        with open(jsonl_file_path, "r") as f:
            for line in f:
                data = json.loads(line)
                # filter out the data with label "-" (not available)
                if data["gold_label"] == "-":
                    count += 1
                    continue
                labels.append(data["gold_label"])
                hypotheses.append(data["sentence2"])
                image_ids.append(data["Flikr30kID"])

        print("Number of data filtered out: {}".format(count))

        data = {"image_id": image_ids, "label": labels, "hypothesis": hypotheses}
        df = pd.DataFrame(data)

        # merge the captions with the data
        df = pd.merge(captions, df, on="image_id")

        # check if every image has a caption
        for i in df.index:
            if df.loc[i, "caption"] == "":
                print("Caption not found for {}".format(df.loc[i, "image_id"]))
                df = df.drop(i)

        # save the data as a csv file
        df.to_csv(
            "data/XVNLI/{}/{}.csv".format(
                language, jsonl_file_path.split("/")[-1].split(".")[0]
            ),
            index=False,
        )
